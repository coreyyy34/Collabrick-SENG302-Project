spring.application.name=home-helper
spring.datasource.url=jdbc:h2:file:./database/home-helper;
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.sql.init.mode=embedded
spring.jpa.hibernate.ddl-auto=update

# email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.from=${MAIL_USERNAME}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# mapbox
mapbox.access.token=${MAPBOX_ACCESS_TOKEN}

# ai
spring.ai.openai.api-key=${GEMINI_API_KEY}
spring.ai.openai.base-url=https://generativelanguage.googleapis.com/v1beta/openai
spring.ai.openai.chat.completions-path=/chat/completions
spring.ai.openai.chat.options.model=gemini-2.5-flash
spring.ai.retry.max-attempts=1

# file size limits
# set to 100MB instead of 10 as a workaround for issues; see UploadController
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
server.tomcat.max-swallow-size=-1

# base url
app.full-base-url=http://localhost:8080
app.base-url=http://localhost:8080
app.ws-url=ws://localhost:8080/ws/chat

spring.config.import=optional:file:env.properties

# generate the schema without applying it to the database
# Tell JPA to generate create scripts
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=target/schema.sql
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
